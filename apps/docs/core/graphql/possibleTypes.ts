export interface PossibleTypesResultData {
  possibleTypes: {
    [key: string]: string[]
  }
}
const result: PossibleTypesResultData = {
  possibleTypes: {
    Account: ['Admin', 'CompanyUser', 'IndividualUser'],
    AssetType: ['CoinAssetType', 'TokenAssetType'],
    ChangePasswordResponse: [
      'Admin',
      'CompanyUser',
      'IndividualUser',
      'InvalidCurrentPasswordError',
      'PasswordTooWeakError',
    ],
    Client: ['Company', 'Individual'],
    CommandBankUpdateResponse: ['BankUpdateCommand', 'ObjectHasBeenLockedError'],
    CommandPolicyUpdateResponse: ['ObjectHasBeenLockedError', 'PolicyUpdateCommand'],
    CommandUserCreateResponse: ['AccountAlreadyExistsError', 'UserCreateCommand'],
    CommandUserRemoveResponse: ['UserAssociatePolicyError', 'UserRemoveCommand'],
    CommandWalletUpdateResponse: ['ObjectHasBeenLockedError', 'WalletUpdateCommand'],
    ConfirmWalletDepositResponse: [
      'IncorrectTxError',
      'TxNotFounError',
      'WalletDepositConfirmation',
    ],
    Error: [
      'AccountAlreadyExistsError',
      'AccountNotFoundError',
      'IncorrectTxError',
      'InvalidCurrentPasswordError',
      'InvalidSignInInputError',
      'InvalidTfaCodeError',
      'ObjectHasBeenLockedError',
      'PasswordResetExpiredError',
      'PasswordTooWeakError',
      'TxNotFounError',
      'UserAssociatePolicyError',
    ],
    FieldResponse: [
      'AddressField',
      'CountryField',
      'FileField',
      'GroupField',
      'MobileField',
      'TextField',
    ],
    LiquidStaking: ['LiquidStakingLido'],
    Operation: [
      'AdminCreateOperation',
      'AdminRemoveOperation',
      'AuthAppRebindOperation',
      'AuthAppResetPinOperation',
      'BankCreateOperation',
      'BankDepositOperation',
      'BankUpdateCommand',
      'BankWithdrawalOperation',
      'CryptoToFiatCommand',
      'EthStakingCommand',
      'FiatToCryptoCommand',
      'LiquidStakeLidoCommand',
      'PolicyCreateCommand',
      'PolicyUpdateCommand',
      'UserCreateCommand',
      'UserRemoveCommand',
      'WalletCreateCommand',
      'WalletDepositConfirmation',
      'WalletUpdateCommand',
      'WalletWithdrawalCommand',
      'WhitelistedBankCreateCommand',
      'WhitelistedWalletCreateCommand',
    ],
    OperationReviewRecord: ['AdminReviewRecord', 'ClientReviewRecord'],
    RequestAdminCreateResponse: ['AccountAlreadyExistsError', 'AdminCreateOperation'],
    ResetPasswordResponse: ['PasswordResetExpiredError', 'PasswordTooWeakError', 'Success'],
    SendResetPasswordEmailResponse: ['AccountNotFoundError', 'Success'],
    SetPasswordResponse: ['Admin', 'CompanyUser', 'IndividualUser', 'PasswordTooWeakError'],
    SetTfaResponse: ['InvalidTfaCodeError', 'Success'],
    SignInAdminResponse: ['Admin', 'InvalidSignInInputError'],
    SignInUserResponse: ['CompanyUser', 'IndividualUser', 'InvalidSignInInputError'],
    SignUpCompanyUserResponse: ['AccountAlreadyExistsError', 'CompanyUser'],
    SignUpIndividualUserResponse: ['AccountAlreadyExistsError', 'IndividualUser'],
    SimpleWithdrawalOperation: [
      'EthStakingCommand',
      'LiquidStakeLidoCommand',
      'WalletWithdrawalCommand',
    ],
    User: ['CompanyUser', 'IndividualUser'],
    VerifyTfaResponse: ['InvalidTfaCodeError', 'Success'],
    WalletTransaction: [
      'CryptoToFiatTransferToAegisTx',
      'EthStaking',
      'LiquidStakingLido',
      'WalletWithdrawal',
    ],
  },
}
export default result
